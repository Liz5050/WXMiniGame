{"version":3,"sources":["file:///G:/Work/cocoscreator/MiniGame/assets/script/common/AudioPlayer.ts"],"names":["_decorator","Component","AudioSource","resources","ccclass","property","AudioPlayer","_audioPlayers","_audioIdx","_audioLastIdx","_isMute","start","audio","node","getChildByName","getComponent","push","onUpdate","dt","play","audioName","stopLast","stop","clip","self","url","audioClip","get","source","load","error","setMute","isMute","i","length","volume","onDestroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, AudioSource, resources, AudioClip } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AudioPlayer')\r\nexport class AudioPlayer extends Component {\r\n    private _audioPlayers:AudioSource[];\r\n    private _audioIdx:number;\r\n    private _audioLastIdx:number;\r\n    private _isMute:boolean;\r\n\r\n    public start() {\r\n        this._audioPlayers = [];\r\n        this._audioIdx = 0;\r\n        this._audioLastIdx = -1;\r\n        let audio:AudioSource = this.node.getChildByName(\"Sound1\").getComponent(AudioSource);\r\n        this._audioPlayers.push(audio);\r\n        audio = this.node.getChildByName(\"Sound2\").getComponent(AudioSource);\r\n        this._audioPlayers.push(audio);\r\n        audio = this.node.getChildByName(\"Sound3\").getComponent(AudioSource);\r\n        this._audioPlayers.push(audio);\r\n        // this._audioPlayer = this.getComponent(engine.AudioSource);\r\n    }\r\n\r\n    public onUpdate(dt) {\r\n\r\n    }\r\n\r\n    public play(audioName:string,stopLast:boolean = true) {\r\n        if (stopLast) {\r\n            if(this._audioLastIdx >= 0){\r\n                this._audioPlayers[this._audioLastIdx].stop();\r\n                this._audioPlayers[this._audioLastIdx].clip = null;\r\n            }\r\n        }\r\n        this._audioIdx = this._audioLastIdx + 1;\r\n        this._audioLastIdx = this._audioIdx;\r\n        if(this._audioIdx >= 3){\r\n            this._audioIdx = 0;\r\n            this._audioLastIdx = 0;\r\n        }\r\n        let self = this;\r\n        let url:string = \"audio/\" + audioName;\r\n        let audioClip = resources.get(url) as AudioClip;\r\n        let source:AudioSource = this._audioPlayers[this._audioIdx];\r\n        if(audioClip){\r\n            source.clip = audioClip;\r\n            source.play();\r\n        }else{\r\n            resources.load(url,function(error:Error,audio){\r\n                source.clip = audio as AudioClip;\r\n                source.play();\r\n            });\r\n        }\r\n    }\r\n\r\n    public setMute(isMute:boolean){\r\n        this._isMute = isMute;\r\n        for(let i = 0;i < this._audioPlayers.length; i++){\r\n            this._audioPlayers[i].volume = isMute ? 0 : 1;\r\n        }\r\n    }\r\n\r\n    public onDestroy() {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}