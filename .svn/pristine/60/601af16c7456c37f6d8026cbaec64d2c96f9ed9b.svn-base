{"version":3,"sources":["file:///G:/Work/cocoscreator/MiniGame/assets/script/common/AudioPlayer.ts"],"names":["_decorator","Component","AudioSource","ccclass","property","AudioPlayer","_audioPlayers","_audioIdx","_audioLastIdx","_isMute","start","audio","node","getChildByName","getComponent","push","onUpdate","dt","play","audioName","stopLast","stop","clip","self","url","audioClip","engine","loader","getAsset","player","loadTask","load","promise","then","catch","error","console","setMute","isMute","i","length","mute","onDestroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, AudioSource } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AudioPlayer')\r\nexport class AudioPlayer extends Component {\r\n    private _audioPlayers:AudioSource[];\r\n    private _audioIdx:number;\r\n    private _audioLastIdx:number;\r\n    private _isMute:boolean;\r\n\r\n    public start() {\r\n        this._audioPlayers = [];\r\n        this._audioIdx = 0;\r\n        this._audioLastIdx = -1;\r\n        let audio:AudioSource = this.node.getChildByName(\"AudioSource1\").getComponent(AudioSource);\r\n        this._audioPlayers.push(audio);\r\n        audio = this.node.getChildByName(\"AudioSource2\").getComponent(AudioSource);\r\n        this._audioPlayers.push(audio);\r\n        audio = this.node.getChildByName(\"AudioSource3\").getComponent(AudioSource);\r\n        this._audioPlayers.push(audio);\r\n        // this._audioPlayer = this.getComponent(engine.AudioSource);\r\n    }\r\n\r\n    public onUpdate(dt) {\r\n\r\n    }\r\n\r\n    public play(audioName:string,stopLast:boolean = true) {\r\n        if (stopLast) {\r\n            if(this._audioLastIdx >= 0){\r\n                this._audioPlayers[this._audioLastIdx].stop();\r\n                this._audioPlayers[this._audioLastIdx].clip = null;\r\n            }\r\n        }\r\n        this._audioIdx = this._audioLastIdx + 1;\r\n        this._audioLastIdx = this._audioIdx;\r\n        if(this._audioIdx >= 3){\r\n            this._audioIdx = 0;\r\n            this._audioLastIdx = 0;\r\n        }\r\n        let self = this;\r\n        let url:string = \"Resources/Sound/\" + audioName + \".mp3\";\r\n        let audioClip = engine.loader.getAsset(url);\r\n        let player:engine.AudioSource = this._audioPlayers[this._audioIdx];\r\n        if(audioClip){\r\n            player.clip = (audioClip as engine.AudioClip);\r\n            player.play();\r\n        }else{\r\n            let loadTask:engine.LoadTask<engine.AudioClip> = engine.loader.load(url);\r\n            loadTask.promise.then(function(audio){\r\n                player.clip = audio;\r\n                player.play();\r\n            }).catch(function(error){\r\n                console.error(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    public setMute(isMute:boolean){\r\n        this._isMute = isMute;\r\n        for(let i = 0;i < this._audioPlayers.length; i++){\r\n            this._audioPlayers[i].mute = isMute;\r\n        }\r\n    }\r\n\r\n    public onDestroy() {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}