{"version":3,"sources":["file:///G:/Work/cocoscreator/MiniGame/assets/script/game/gameShulte/view/GameShulteBeginView.ts"],"names":["BtnType","_decorator","Component","Toggle","GameShulteStartView","ccclass","property","GameShulteBeginView","_itemContainer","_beginNode","_gameStartNode","_beginAnim","_gameStart","_curTypeIdx","_num","_btns","_itemEntitys","_typeList","_isStart","update","deltaTime","start","getComponent","self","node","getChildByName","active","getChildByPath","toggleGroup","i","length","type","btn","toggleNode","toggle","checkEvents","GameUI","FindChild","entity","init","btnEntity","btnCom","engine","UIButton","onClick","add","setIndex","push","btnStart","OnStartClick","btnExit","EventManager","dispatch","EventEnum","OnGameExit","GameType","Shulte","console","log","_gameStartEntity","_beginEntity","startGame","gameExit","index","clearShowGrid","setSelected","curType","url","loader","getAsset","updateShowGrid","load","promise","then","prefabAsset","width","sizeX","curSize","Math","floor","canShowGrid","itemEntity","getShowItemGrid","addChild","transform2D","sizeY","col","row","x","y","position","ItemGrid","GameShulteBegin","ITEM_POOL","pop","instantiate","Array","_isSelected","_index","_type","_itemEntity","_normalEntity","_selectedEntity","_btnItem","consturctor","initUI","txtType","UILabel","text","isSelected"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Toggle, ToggleContainer, utils } from 'cc';\r\nimport Mgr from '../../../manager/Mgr';\r\nimport { GameShulteStartView } from './GameShulteStartView';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameShulteBeginView')\r\nexport class GameShulteBeginView extends Component {\r\n    \r\n    private static ITEM_POOL:Array<Node> = new Array();\r\n    private _itemContainer:Node;\r\n\r\n    private _beginNode:Node;\r\n    private _gameStartNode:Node;\r\n\r\n    private _beginAnim:engine.Animator;\r\n    private _gameStart:GameShulteStartView;\r\n\r\n    private _curTypeIdx:number = -1;\r\n    private _num:number;\r\n    private _btns:BtnType[] = [];\r\n    private _itemEntitys:Node[] = [];\r\n    private _typeList:number[] = [3,4,5,6,7,8];\r\n\r\n    private _isStart:boolean = false;\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    public start() {\r\n      this._gameStart = this.getComponent(GameShulteStartView);\r\n\r\n      let self = this;\r\n    //   let muteToggle:engine.UIToggle = GameUI.FindChild(this.entity,\"MuteToggle\",engine.UIToggle);\r\n    //   let soundNormal:engine.Entity = GameUI.FindChild(muteToggle.entity,\"Normal\");//this.entity.transform2D.findChildByName(\"MuteToggle/Normal\").entity;\r\n    //   muteToggle.onClick.add(function(comp,event){\r\n    //       soundNormal.active = !muteToggle.isChecked;\r\n    //       Mgr.soundMgr.setMute(muteToggle.isChecked);\r\n    //   });\r\n      \r\n\r\n      this._gameStartNode = this.node.getChildByName(\"gameStart\");\r\n      this._gameStartNode.active = false;\r\n\r\n      this._beginNode = this.node.getChildByName(\"begin\");\r\n      this._beginNode.active = true;\r\n      \r\n      this._itemContainer = this.node.getChildByPath(\"begin/group/gridGroup\");\r\n      let toggleGroup:ToggleContainer = this.node.getChildByPath(\"begin/ToggleGroup\").getComponent(\"ToggleContainer\") as ToggleContainer;\r\n      for (let i = 0; i < this._typeList.length; i++) {\r\n          let type = this._typeList[i];\r\n          let btn:BtnType = new BtnType();\r\n          let toggleNode:Node = this.node.getChildByPath(\"begin/group/gridGroup/Toggle\" + (i+1));\r\n          let toggle:Toggle = toggleNode.getComponent(Toggle);\r\n          toggle.checkEvents = [];\r\n          GameUI.FindChild(this.entity,\"Begin/TypeGroup/btns/btnType\" + (i+1));\r\n          btn.init(btnEntity,type,i);\r\n\r\n          let btnCom:engine.UIButton = btnEntity.getComponent(engine.UIButton);\r\n          btnCom.onClick.add(function(){\r\n              self.setIndex(i);\r\n          });\r\n          this._btns.push(btn);\r\n      }\r\n      \r\n      let btnStart:engine.UIButton = GameUI.FindChild(this.entity,\"Begin/Group/btnStart\",engine.UIButton);\r\n      btnStart.onClick.add(function(){\r\n          self.OnStartClick();\r\n      });\r\n\r\n      let btnExit:engine.UIButton = GameUI.FindChild(this.entity,\"Begin/btnExit\",engine.UIButton);\r\n      btnExit.onClick.add(function(){\r\n        //退出前回到初始化状态\r\n        self.setIndex(0);\r\n        self.entity.active = false;\r\n        EventManager.dispatch(EventEnum.OnGameExit,GameType.Shulte);\r\n      });\r\n      this.setIndex(0);\r\n  }\r\n\r\n  private OnStartClick(){\r\n      if(this._isStart) return;\r\n      console.log(\"开始游戏\");\r\n      this._gameStartEntity.active = true;\r\n      this._beginEntity.active = false;\r\n      this._gameStart.startGame(this._typeList[this._curTypeIdx]);\r\n      this._isStart = true;\r\n  }\r\n\r\n  public gameExit(){\r\n      this._isStart = false;\r\n  }\r\n\r\n  private setIndex(index:number){\r\n      if(this._curTypeIdx == index) return;\r\n      if(this._curTypeIdx >= 0){\r\n          this.clearShowGrid();\r\n          this._btns[this._curTypeIdx].setSelected(false);\r\n      }\r\n      this._curTypeIdx = index;\r\n      this._btns[index].setSelected(true);\r\n      let curType:number = this._typeList[index];\r\n      this._num = curType * curType;\r\n\r\n      let url:string = 'Resources/Prefabs/ItemShowGrid.prefab';\r\n      if(engine.loader.getAsset(url)){\r\n          this.updateShowGrid();\r\n      }else{\r\n          let self = this;\r\n          engine.loader.load(url).promise.then((prefabAsset:engine.Prefab) => {\r\n              // 将 prefab 资源实例化\r\n              console.log(\"#######加载成功\");\r\n              self.updateShowGrid();\r\n          })\r\n      }\r\n  }\r\n\r\n  private updateShowGrid(){\r\n      let curType = this._typeList[this._curTypeIdx];\r\n      let width = this._itemContainer.sizeX;\r\n      // let offset = this._systemInfo.screenWidth / 1080;\r\n      let curSize = Math.floor(width / curType);// * offset;\r\n      \r\n      for (let i = 0; i < this._num; i++) {\r\n          if(!this.canShowGrid(i)) continue;\r\n          let itemEntity:engine.Entity = this.getShowItemGrid();\r\n          itemEntity.active = true;\r\n          this._itemContainer.addChild(itemEntity.transform2D);\r\n          itemEntity.transform2D.sizeX = curSize;\r\n          itemEntity.transform2D.sizeY = curSize;\r\n          \r\n          let col = i % curType;\r\n          let row = Math.floor(i / curType);\r\n          let x = col * curSize;\r\n          let y = row * - curSize;\r\n          itemEntity.transform2D.position.x = x;\r\n          itemEntity.transform2D.position.y = y;\r\n\r\n          (itemEntity.getComponent(ItemGrid) as ItemGrid).setIndex(i);\r\n          this._itemEntitys.push(itemEntity);\r\n      }\r\n  }\r\n\r\n  private getShowItemGrid():engine.Entity{\r\n      let entity:engine.Entity = GameShulteBegin.ITEM_POOL.pop();\r\n      if(!entity){\r\n          let prefabAsset:engine.Prefab = engine.loader.getAsset(\"Resources/Prefabs/ItemShowGrid.prefab\");\r\n          if(prefabAsset){\r\n              entity = prefabAsset.instantiate();\r\n          }\r\n          else{\r\n              console.log(\"找不到资源\");\r\n          }\r\n      }\r\n      return entity;\r\n  }\r\n\r\n  private clearShowGrid(){\r\n      for (let i = 0; i < this._itemEntitys.length; i++) {\r\n          let entity = this._itemEntitys[i];\r\n          entity.active = false;\r\n          GameShulteBegin.ITEM_POOL.push(entity);\r\n      }\r\n      this._itemEntitys = [];\r\n  }\r\n\r\n  private canShowGrid(index:number) {\r\n      let curType:number = this._typeList[this._curTypeIdx];\r\n      if (curType == 3)\r\n      {\r\n          return index != 4;\r\n      }\r\n      if (curType == 4)\r\n      {\r\n          return index != 5 && index != 6 && index != 9 && index != 10;\r\n      }\r\n      if (curType == 5)\r\n      {\r\n          return (index < 6 || index > 8) && (index < 11 || index > 13) && (index < 16 || index > 18);\r\n      }\r\n      if (curType == 6)\r\n      {\r\n          return index != 14 && index != 15 && index != 20 && index != 21;\r\n      }\r\n      if (curType == 7)\r\n      {\r\n          return (index < 16 || index > 18) && (index < 23 || index > 25) && (index < 30 || index > 32);\r\n      }\r\n      return (index < 18 || index > 21) && (index < 26 || index > 29) && (index < 34 || index > 37) && (index < 42 || index > 45);\r\n  }\r\n}\r\n\r\nclass BtnType {\r\n  private _isSelected:boolean;\r\n  private _index:number;\r\n  private _type:number;\r\n  private _itemEntity:engine.Entity;\r\n  private _normalEntity:engine.Entity;\r\n  private _selectedEntity:engine.Entity;\r\n  private _btnItem:engine.UIButton;\r\n\r\n  public consturctor(){\r\n\r\n  }\r\n\r\n  public init(entity:engine.Entity,type:number,index:number){\r\n      this._itemEntity = entity;\r\n      this._type = type;\r\n      this._index = index;\r\n      this.initUI();\r\n  }\r\n\r\n  private initUI(){\r\n      this._normalEntity = GameUI.FindChild(this._itemEntity,\"normal\");\r\n      this._selectedEntity = GameUI.FindChild(this._itemEntity,\"selected\");\r\n      let txtType:engine.UILabel = GameUI.FindChild(this._itemEntity,\"txtType\",engine.UILabel);\r\n      txtType.text = this._type + \"X\" + this._type;\r\n      this._btnItem = GameUI.FindChild(this._itemEntity,\"\",engine.UIButton);\r\n  }\r\n\r\n  public setSelected(isSelected:boolean){\r\n      if (this._isSelected == isSelected){\r\n          return;\r\n      }\r\n      this._normalEntity.active = !isSelected;\r\n      this._selectedEntity.active = isSelected;\r\n      this._isSelected = isSelected;\r\n  }\r\n}\r\n\r\n\r\n"]}