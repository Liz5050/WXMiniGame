{"version":3,"sources":["file:///G:/Work/cocoscreator/svn/MiniGame/assets/script/game/gameGrid/view/GameGridStartView.ts"],"names":["MapGridItem","BtnPreviewGrid","_decorator","Button","Component","instantiate","Label","math","Node","NodeEventType","resources","EventManager","EventEnum","TweenManager","Mgr","GameType","ccclass","property","GameGridStartView","_btns","_txtScore","_mapItemList","_mapContainer","_rightCount","_score","_removeCount","_endCheckLocalPos","update","dt","start","node","getChildByPath","i","btn","getChildByName","gridIndex","push","getComponent","string","btnExit","self","on","EventType","CLICK","uploadScore","exitClear","dispatch","OnGameExit","Grid","initMapGrid","addListener","OnGameGridTouchEnd","OnTouchEndCheck","OnGameGridReqNextPreview","OnReqNextPreview","onDisable","soundMgr","stopBGM","row","col","item","init","length","updatePreviewGrid","index","gridList","Vec3","num","emptyNum","itemArr","grid","inverseTransformPoint","worldPosition","x","y","idx","ConvertXYToIndex","isEmpty","checkListX","checkListY","setEmpty","indexOf","UpdateTouchEndResult","splice","canRemove","lenX","lenY","totalNum","score","play","posX","posY","Math","round","abs","OnGameStart","active","k","_col","_row","_posX","_posY","_itemEntity","_container","_posArr","_isEmpty","_playTween","consturctor","container","initUI","url","prefabAsset","get","addChild","setPosition","bool","playTween","col_row","clearTween","addTween","wait","to","scaleX","scaleY","removeTweens","setScale","position","getItemWorldPos","getWorldPosition","constructor","_touchMask","_preview","_previewPos","_previewScale","_previewX","_previewY","_moveStartX","_moveStartY","_canMove","_gridIndex","_randomGrid","_lastRandomGrid","_gridList","_btnGrid","_node","getPosition","getScale","TOUCH_CANCEL","touchEnd","TOUCH_END","pos1","pos2","TOUCH_START","event","uiPos","getUIStartLocation","touchStart","TOUCH_MOVE","pos","getUIDelta","touchMove","startX","startY","deltaX","deltaY","isRight","itemList","localPos","call","gridIdx","random","updatePreview","load","destroy","children","angle","console","log"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, EventTouch, instantiate, Label, math, Node, NodeEventType, Prefab, resources} from 'cc';\r\nimport { EventManager } from '../../../manager/EventManager';\r\nimport { EventEnum } from '../../../enum/EventEnum';\r\nimport TweenManager from '../../../common/TweenManager';\r\nimport Mgr from '../../../manager/Mgr';\r\nimport { GameType } from '../../../enum/GameType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameGridStartView')\r\nexport class GameGridStartView extends Component {\r\n    // private _previewGrid1:BtnPreviewGrid;\r\n    // private _previewGrid2:BtnPreviewGrid;\r\n    // private _previewGrid3:BtnPreviewGrid;\r\n    private _btns:BtnPreviewGrid[];\r\n\r\n    private _txtScore:Label;\r\n\r\n    private _mapItemList:MapGridItem[][];\r\n    private _mapContainer:Node;\r\n    private _rightCount:number = 0;\r\n    private _score:number = 0;\r\n    private _removeCount:number = 0;//连消计数\r\n    public update(dt) {\r\n\r\n    }\r\n    public start(): void {\r\n        this._mapContainer = this.node.getChildByPath(\"gridMap/items\");\r\n\r\n        this._btns = [];\r\n        for(let i = 1; i <= 3; i++){\r\n            let btn = new BtnPreviewGrid(this.node.getChildByName(\"BtnPreviewGrid\" + i));\r\n            btn.gridIndex = i;\r\n            this._btns.push(btn);\r\n        }\r\n\r\n        this._txtScore = this.node.getChildByName(\"txtScore\").getComponent(Label);\r\n        this._txtScore.string = \"得分：0\";\r\n\r\n        let btnExit:Node = this.node.getChildByName(\"btnExit\");\r\n        let self = this\r\n        btnExit.on(Button.EventType.CLICK,function(){\r\n            //退出前回到初始化状态\r\n            self.uploadScore();\r\n            self.exitClear();\r\n            EventManager.dispatch(EventEnum.OnGameExit,GameType.Grid);\r\n        });\r\n\r\n        this.initMapGrid();\r\n        EventManager.addListener(EventEnum.OnGameGridTouchEnd,this.OnTouchEndCheck,this);\r\n        EventManager.addListener(EventEnum.OnGameGridReqNextPreview,this.OnReqNextPreview,this);\r\n    }\r\n\r\n    public onDisable(): void {\r\n        Mgr.soundMgr.stopBGM();    \r\n    }\r\n\r\n    private uploadScore(){\r\n        // wx.cloud.init();\r\n        // let db = wx.cloud.database()\r\n        // let rankData = db.collection('gamegrid_rank');\r\n        // console.log(\"获取排行榜数据\",rankData);\r\n        // let openDataContext = wx.getOpenDataContext();\r\n        // let userStorage = wx.getUserCloudStorage()\r\n        // console.log(\"获取用户托管数据\",userStorage);\r\n        // const score = this._score;//Math.floor(Math.random() * 100)\r\n        // wx.setUserCloudStorage({\r\n        // KVDataList: [\r\n        //         {\r\n        //             key: 'rankid',\r\n        //             value: JSON.stringify({\r\n        //                 wxgame: {\r\n        //                 score: String(score),\r\n        //                 update_time: String(+ new Date() / 1000)\r\n        //                 }\r\n        //             })\r\n        //         },\r\n        //     ],\r\n        //     success: () => {\r\n        //         wx.showToast({\r\n        //             title: `分数上报成功: ${score}分`,\r\n        //             icon: 'none',\r\n        //             duration: 2000\r\n        //         })\r\n        //         console.log('上传成功')\r\n        //     },\r\n        //     fail: (res) => {\r\n        //         console.log(res)\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    private initMapGrid(){\r\n        this._mapItemList = [];\r\n        for(let row = 0; row < 10; row++){\r\n            for(let col = 0; col < 10; col++){\r\n                if(!this._mapItemList[row]){\r\n                    this._mapItemList[row] = [];\r\n                }\r\n                let item:MapGridItem = new MapGridItem();\r\n                this._mapItemList[row][col] = item;\r\n                item.init(col,row,this._mapContainer);\r\n            }\r\n        }\r\n    }\r\n\r\n    private OnReqNextPreview(){\r\n        for(let i = 0; i < this._btns.length; i++){\r\n            this._btns[i].updatePreviewGrid();\r\n        }\r\n    }\r\n\r\n    private _endCheckLocalPos:math.Vec3;\r\n    private OnTouchEndCheck(index:number,gridList:Node[]){\r\n        if(!this._endCheckLocalPos){\r\n            this._endCheckLocalPos = new math.Vec3();\r\n        }\r\n        let num = gridList.length;\r\n        let emptyNum = 0;\r\n        let itemArr:MapGridItem[] = [];\r\n        for(let i = 0; i < num; i ++) {\r\n            let grid:Node = gridList[i];//GameUI.FindChild(randomGrid,\"grid\" + i);\r\n            this._mapContainer.inverseTransformPoint(this._endCheckLocalPos,grid.worldPosition);\r\n            // console.log(\"坐标转换\" + i + \"----x：\" + localPos.x + \"----y：\" + localPos.y)\r\n            if(this._endCheckLocalPos.x >= -500 && this._endCheckLocalPos.x <= 500 && this._endCheckLocalPos.y >= -500 && this._endCheckLocalPos.y <= 500){\r\n                //在范围内，进一步检测对应网格是否是空位\r\n                let idx:number[] = this.ConvertXYToIndex(this._endCheckLocalPos.x,this._endCheckLocalPos.y);\r\n                // console.log(\"坐标转换行列值\" + i + \"----col：\" + idx[0] + \"----row：\" + idx[1]);\r\n                let item:MapGridItem = this._mapItemList[idx[1]][idx[0]];\r\n                if(item.isEmpty){\r\n                    emptyNum ++;\r\n                    itemArr.push(item);\r\n                }else{\r\n                    //存在非空网格\r\n                    break;\r\n                }\r\n            }\r\n            else{\r\n                //不在网格地图范围内\r\n                break;\r\n            }\r\n        }\r\n\r\n        let checkListX:number[] = [];\r\n        let checkListY:number[] = [];\r\n        if(emptyNum == num){\r\n            for(let i = 0; i < itemArr.length; i ++){\r\n                itemArr[i].setEmpty(false);\r\n                let col:number = itemArr[i].col;\r\n                let row:number = itemArr[i].row;\r\n                if(checkListX.indexOf(col) == -1){\r\n                    checkListX.push(col);\r\n                }\r\n                if(checkListY.indexOf(row) == -1){\r\n                    checkListY.push(row);\r\n                }\r\n            }\r\n            this._rightCount ++;\r\n        }\r\n        this._btns[index].UpdateTouchEndResult(emptyNum == num,itemArr);\r\n        if(this._rightCount >= 3){\r\n            this._rightCount = 0;\r\n            this.OnReqNextPreview();\r\n        }\r\n\r\n        for(let i:number = checkListX.length - 1; i >= 0; i--){\r\n            let col:number = checkListX[i];\r\n            for(let row:number = 0; row < 10; row++){\r\n                if(this._mapItemList[row][col].isEmpty){\r\n                    checkListX.splice(i,1);\r\n                    break; \r\n                }\r\n            }\r\n        }\r\n        for(let i:number = checkListY.length - 1; i >= 0 ; i--){\r\n            let row:number = checkListY[i];\r\n            for(let col:number = 0; col < 10; col++){\r\n                if(this._mapItemList[row][col].isEmpty){\r\n                    checkListY.splice(i,1);\r\n                    break; \r\n                }\r\n            }\r\n        }\r\n        let canRemove:boolean = false;\r\n        let lenX:number = checkListX.length;\r\n        let lenY:number = checkListY.length;\r\n        for(let i:number = 0; i < lenX; i++){\r\n            let col:number = checkListX[i];\r\n            for(let row:number = 0; row < 10; row++){\r\n                this._mapItemList[row][col].setEmpty(true,true,1);//1、纵向消除\r\n                canRemove = true\r\n            }\r\n        }\r\n        for(let i:number = 0; i < lenY ; i++){\r\n            let row:number = checkListY[i];\r\n            for(let col:number = 0; col < 10; col++){\r\n                this._mapItemList[row][col].setEmpty(true,true,2);//2、横向消除\r\n                canRemove = true\r\n            }\r\n        }\r\n        if(canRemove) {\r\n            this._removeCount ++;\r\n            let totalNum = lenX + lenY;\r\n            let score:number = 0;\r\n            if(totalNum == 1 || totalNum == 2){\r\n                score = totalNum;\r\n            }\r\n            else if(totalNum == 3){\r\n                score = totalNum + 1;\r\n            }\r\n            else if(totalNum > 3){\r\n                score = totalNum * 2;\r\n            }\r\n            if(this._removeCount > 1){\r\n                //连续消除\r\n                score += this._removeCount * totalNum;\r\n            }\r\n            this._score += score;\r\n            this._txtScore.string = \"得分：\" + this._score;\r\n            Mgr.soundMgr.play(\"crrect_answer3\");//存在可消除的行or列\r\n        }\r\n        else {\r\n            this._removeCount = 0;\r\n        }\r\n    }\r\n\r\n    //局部坐标转换为网格索引\r\n    private ConvertXYToIndex(posX:number,posY:number):number[]{\r\n        let col = Math.round((posX + 450) / 100);\r\n        let row = Math.round(Math.abs(posY - 450) / 100);\r\n        return [col,row];\r\n    }\r\n\r\n    public OnGameStart(){\r\n        this._score = 0;\r\n        this._txtScore.string = \"得分：0\";\r\n        this.OnReqNextPreview();\r\n    }\r\n    private exitClear(){\r\n        this._rightCount = 0;\r\n        this.node.active = false;\r\n        this._txtScore.string = \"得分：0\";\r\n        this._score = 0;\r\n        for(let i:number = 0; i < this._mapItemList.length; i++){\r\n            for(let k:number = 0; k < this._mapItemList[i].length; k++){\r\n                this._mapItemList[i][k].setEmpty(true);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class MapGridItem {\r\n    private _col:number;\r\n    private _row:number;\r\n    private _posX:number;\r\n    private _posY:number;\r\n    private _itemEntity:Node;\r\n    private _container:Node;\r\n    private _posArr:number[];\r\n\r\n    private _isEmpty:boolean = true;\r\n    private _playTween:boolean;\r\n    public consturctor(){\r\n\r\n    }\r\n\r\n    public init(col:number,row:number,container:Node){\r\n        this._col = col;\r\n        this._row = row;\r\n        this._posX = -450 + col * 100;\r\n        this._posY = 450 - row * 100;\r\n        this._posArr = [this._posX,this._posY];\r\n        this._container = container;\r\n    }\r\n\r\n    private initUI(){\r\n        let url:string = \"prefab/GameGridMapItem\";\r\n        let prefabAsset:Prefab = resources.get(url);\r\n        if(prefabAsset){\r\n            this._itemEntity = instantiate(prefabAsset);\r\n            this._container.addChild(this._itemEntity);\r\n            this._itemEntity.setPosition(this._posX,this._posY);\r\n        }\r\n    }\r\n\r\n    public get isEmpty():boolean{\r\n        return this._isEmpty;\r\n    }\r\n\r\n    public setEmpty(bool:boolean,playTween:boolean = false,col_row:number = 1){\r\n        this._isEmpty = bool;\r\n        if(!bool){\r\n            if(this._itemEntity){\r\n                this.clearTween();\r\n                this._itemEntity.active = true;\r\n            }\r\n            else{\r\n                this.initUI();\r\n            }\r\n        }\r\n        else{\r\n            if(this._itemEntity){\r\n                if(playTween){\r\n                    if(!this._playTween){\r\n                        this._playTween = true;\r\n                        let index:number = col_row == 1? this._row : this._col;\r\n                        TweenManager.addTween(this._itemEntity).wait(50 * index).to({scaleX:2,scaleY:2},50).to({scaleX:0,scaleY:0},100);\r\n                    }\r\n                }\r\n                else{\r\n                    this.clearTween();\r\n                    this._itemEntity.active = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearTween(){\r\n        if(this._playTween){\r\n            TweenManager.removeTweens(this._itemEntity);\r\n            this._itemEntity.setScale(1,1);\r\n            this._playTween = false;\r\n        }\r\n    }\r\n\r\n    public get position():number[] {\r\n        return this._posArr;\r\n    }\r\n\r\n    public get col():number{\r\n        return this._col;\r\n    }\r\n\r\n    public get row():number{\r\n        return this._row;\r\n    }\r\n\r\n    public getItemWorldPos():math.Vec3{\r\n        if(!this._itemEntity){\r\n            return null;\r\n        }\r\n        \r\n        return this._itemEntity.getWorldPosition();\r\n    }\r\n}\r\n\r\nclass BtnPreviewGrid {\r\n    private _touchMask:Node;\r\n    private _preview:Node;\r\n    private _previewPos:math.Vec3;\r\n    private _previewScale:math.Vec3;\r\n    private _previewX:number;//初始X位置\r\n    private _previewY:number;//初始Y位置\r\n    private _moveStartX:number;\r\n    private _moveStartY:number;\r\n    private _canMove:boolean;\r\n    private _gridIndex:number;\r\n\r\n    private _randomGrid:Node;\r\n    private _lastRandomGrid:Node;\r\n    private _gridList:Node[];\r\n    private _btnGrid:Node;\r\n    private _node:Node;\r\n    public constructor(node:Node) {\r\n        this._node = node;\r\n        this.initUI();        \r\n    }\r\n\r\n    private initUI(){\r\n        this._preview = this._node.getChildByName(\"preview\");\r\n        this._previewPos = this._preview.getPosition();\r\n        this._previewScale = this._preview.getScale();\r\n        this._previewX = this._previewPos.x;\r\n        this._previewY = this._previewPos.y;\r\n        \r\n\r\n        this._btnGrid = this._node.getChildByName(\"btnGrid\")\r\n        this._btnGrid.on(Node.EventType.TOUCH_CANCEL,function(){\r\n            self.touchEnd();\r\n        });\r\n        \r\n        this._btnGrid.on(NodeEventType.TOUCH_END,function(){\r\n            self.touchEnd();\r\n        });\r\n        let self = this;\r\n        let pos1 = new math.Vec3();\r\n        let pos2 = new math.Vec3();\r\n        this._btnGrid.on(NodeEventType.TOUCH_START,function(event:EventTouch){\r\n            let uiPos = event.getUIStartLocation();\r\n            pos2.x = uiPos.x;\r\n            pos2.y = uiPos.y;\r\n            self._node.inverseTransformPoint(pos1,pos2);\r\n            self.touchStart(pos1.x,pos1.y);\r\n        });\r\n\r\n        this._btnGrid.on(NodeEventType.TOUCH_MOVE,function(event:EventTouch){\r\n            let pos = event.getUIDelta();\r\n            self.touchMove(pos.x,pos.y);\r\n        });\r\n        \r\n        this._touchMask = this._node.getChildByName(\"touchMask\");\r\n        this._touchMask.active = false;\r\n\r\n        this.updatePreviewGrid();\r\n    }\r\n\r\n    private touchStart(startX:number,startY:number){\r\n        if(this._canMove) return;\r\n        this._moveStartX = startX;\r\n        this._moveStartY = startY + 300;\r\n        // this._offsetX = startX;\r\n        // this._offsetY = startY;\r\n        let self = this;\r\n        self._canMove = true;\r\n        TweenManager.removeTweens(this._preview);\r\n        TweenManager.addTween(this._preview).to({scaleX:2, scaleY:2,x:this._moveStartX,y:this._moveStartY},100);\r\n        Mgr.soundMgr.play(\"crrect_answer1\",false);\r\n    }\r\n\r\n    private touchMove(deltaX:number,deltaY:number){\r\n        if(this._canMove){\r\n            // let offsetX = moveX - this._offsetX;\r\n            // let offsetY = moveY - this._offsetY;\r\n            let posX = this._moveStartX + deltaX;\r\n            let posY = this._moveStartY + deltaY;\r\n            this._moveStartX = posX;\r\n            this._moveStartY = posY;\r\n            this._preview.setPosition(posX,posY);\r\n        }\r\n    }\r\n\r\n    private touchEnd(){\r\n        if(this._canMove){\r\n            this._canMove = false;\r\n            EventManager.dispatch(EventEnum.OnGameGridTouchEnd,this._gridIndex,this._gridList);\r\n        }\r\n    }\r\n\r\n    public UpdateTouchEndResult(isRight:boolean,itemList:MapGridItem[]){\r\n        if(isRight){\r\n            this._touchMask.active = true;\r\n            Mgr.soundMgr.play(\"crrect_answer2\",false);\r\n            let self = this;\r\n            for(let i = 0; i < itemList.length; i++){\r\n                let item:MapGridItem = itemList[i];\r\n                let localPos:math.Vec3 = new math.Vec3();\r\n                this._randomGrid.inverseTransformPoint(localPos,item.getItemWorldPos());\r\n\r\n                let grid:Node = this._gridList[i];\r\n                TweenManager.addTween(grid).to({x:localPos.x,y:localPos.y},100).call(function(){\r\n                    grid.active = false;\r\n                });\r\n                \r\n            }\r\n        }else{\r\n            // Mgr.soundMgr.play(\"error999\");\r\n            Mgr.soundMgr.play(\"mobile_phone_O\",false);\r\n            TweenManager.removeTweens(this._preview);\r\n            TweenManager.addTween(this._preview).to({x:this._previewX, y:this._previewY,scaleX:1,scaleY:1},100);\r\n        }\r\n    }\r\n\r\n    public set gridIndex(index:number) {\r\n        this._gridIndex = index;\r\n    }\r\n\r\n    public get gridIndex():number {\r\n        return this._gridIndex;\r\n    }\r\n\r\n    public updatePreviewGrid(){\r\n        this._touchMask.active = false;\r\n        this._preview.setPosition(this._previewX,this._previewY);\r\n        this._preview.setScale(1,1);\r\n        let gridIdx:number = 1 + Math.round(Math.random() * 9);\r\n        let url:string = \"prefab/PreviewGrid\" + gridIdx;\r\n        if(resources.get(url)){\r\n            this.updatePreview(url);\r\n        }else{\r\n            let self = this;\r\n            resources.load(url,function(){\r\n                self.updatePreview(url);\r\n            });\r\n        }\r\n    }\r\n\r\n    private updatePreview(url:string) {\r\n        let prefabAsset:Prefab = resources.get(url);\r\n        let node:Node;\r\n        if(prefabAsset){\r\n            if(this._lastRandomGrid){\r\n                this._lastRandomGrid.destroy();\r\n                this._lastRandomGrid = null;\r\n            }\r\n            if(this._randomGrid){\r\n                //保存上一个格子对象，用于完成3个的缓动效果\r\n                this._lastRandomGrid = this._randomGrid;\r\n                this._randomGrid.active = false;//隐藏上一个，否则会影响下一个格子的布局位置\r\n            }\r\n            node = instantiate(prefabAsset);\r\n            this._preview.addChild(node);\r\n            this._randomGrid = node;\r\n            let num = node.children.length;\r\n            this._gridList = [];\r\n            for(let i = 1; i <= num; i++){\r\n                let grid:Node = node.getChildByName(\"grid\" + i);\r\n                this._gridList.push(grid);\r\n            }\r\n            if(Math.random() > 0.5){\r\n                node.angle = 90;// * Math.PI / 180;\r\n            }\r\n            let scaleX = Math.random() > 0.5 ? -1 : 1;\r\n            let scaleY = Math.random() > 0.5 ? -1 : 1;\r\n            node.setScale(scaleX,scaleY);\r\n        }\r\n        else{\r\n            console.log(\"找不到资源\");\r\n        }\r\n    }\r\n}\r\n"]}