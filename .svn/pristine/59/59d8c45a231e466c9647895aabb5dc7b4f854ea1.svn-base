{"version":3,"sources":["file:///G:/Work/cocoscreator/svn/MiniGame/assets/script/game/gameShulte/view/ShulteGridItem.ts"],"names":["_decorator","Component","Label","math","Sprite","ccclass","property","ShulteGridItem","_index","_txtNum","onLoad","r","Math","floor","random","g","b","sp","getComponent","color","Color","node","getChildByName","update","deltaTime","setIndex","index","string","toString"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;;;;;;;;OACvC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;gCAGjBO,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCN,SADpC,CAC8C;AAAA;AAAA;AAAA,eAClCO,MADkC;AAAA,eAElCC,OAFkC;AAAA;;AAG1CC,QAAAA,MAAM,GAAG;AACL,cAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAJ,GAAoB,CAArB,IAA0B,EAA1B,GAA+B,GAA1C,CAAR,CADK,CACkD;;AACvD,cAAIC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAJ,GAAoB,CAArB,IAA0B,EAA1B,GAA+B,GAA1C,CAAR,CAFK,CAEkD;;AACvD,cAAIE,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAW,CAAC,MAAMD,IAAI,CAACE,MAAL,EAAN,GAAsB,CAAvB,IAA4B,EAA5B,GAAiC,GAA5C,CAAR,CAHK,CAGoD;AACzD;AACA;;AACA,cAAIG,EAAS,GAAG,KAAKC,YAAL,CAAkBd,MAAlB,CAAhB;AACAa,UAAAA,EAAE,CAACE,KAAH,GAAW,IAAIhB,IAAI,CAACiB,KAAT,CAAeT,CAAf,EAAiBI,CAAjB,EAAmBC,CAAnB,CAAX;AACA,eAAKP,OAAL,GAAe,KAAKY,IAAL,CAAUC,cAAV,CAAyB,QAAzB,EAAmCJ,YAAnC,CAAgDhB,KAAhD,CAAf;AACH;;AAEDqB,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEMC,QAAAA,QAAQ,CAACC,KAAD,EAAc;AACzB,eAAKlB,MAAL,GAAckB,KAAd;AACA,eAAKjB,OAAL,CAAakB,MAAb,GAAsB,CAACD,KAAK,GAAC,CAAP,EAAUE,QAAV,EAAtB;AACH;;AArByC,O","sourcesContent":["import { _decorator, Component, Label, math, Sprite } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ShulteGridItem')\r\nexport class ShulteGridItem extends Component {\r\n    private _index:number;\r\n    private _txtNum:Label;\r\n    onLoad() {\r\n        let r = Math.floor((3 * Math.random() + 5) / 10 * 255);//0.5-0.8\r\n        let g = Math.floor((2 * Math.random() + 7) / 10 * 255);//0.7-0.9\r\n        let b = Math.floor((1.5 * Math.random() + 8) / 10 * 255);//0.8-0.95\r\n        // console.log(\"itemGrid onAwake=====r:\"+r + \"  ===g:\"+g + \"  ===b\" + b);\r\n        // gameObject.GetComponent<Image>().color = new Color(r,g,b); \r\n        let sp:Sprite = this.getComponent(Sprite);\r\n        sp.color = new math.Color(r,g,b);\r\n        this._txtNum = this.node.getChildByName(\"txtNum\").getComponent(Label);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    public setIndex(index:number){\r\n        this._index = index;\r\n        this._txtNum.string = (index+1).toString();\r\n    }\r\n}\r\n\r\n\r\n"]}