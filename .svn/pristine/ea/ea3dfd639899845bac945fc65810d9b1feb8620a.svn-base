{"version":3,"sources":["file:///G:/Work/cocoscreator/MiniGame/assets/script/game/MainMenu.ts"],"names":["_decorator","Component","NodeEventType","Toggle","EventManager","EventEnum","GameType","GameState","Mgr","ccclass","property","MainMenu","_gameState","update","deltaTime","start","addListener","OnGameExit","self","muteToggle","node","getChildByName","getComponent","soundNormal","pos","getPosition","on","EventType","TOGGLE","active","isChecked","soundMgr","setMute","y","setPosition","btnShulte","TOUCH_END","OnStartGame","Shulte","btnGridGame","Grid","play","SetGameState","Home","type","Playing","dispatch","OnGameStart","state"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, Node, NodeEventType, Toggle, ToggleComponent } from 'cc';\r\nimport { EventManager } from '../manager/EventManager';\r\nimport { EventEnum } from '../enum/EventEnum';\r\nimport { GameType } from '../enum/GameType';\r\nimport { GameState } from '../enum/GameState';\r\nimport Mgr from '../manager/Mgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MainMenu')\r\nexport class MainMenu extends Component {\r\n    private _gameState:GameState;\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    public start(){\r\n        EventManager.addListener(EventEnum.OnGameExit,this.OnGameExit,this);\r\n\r\n        let self = this;\r\n        let muteToggle:Toggle = this.node.getChildByName(\"muteToggle\").getComponent(Toggle);\r\n        let soundNormal:Node = muteToggle.node.getChildByName(\"normal\");\r\n        let pos = soundNormal.getPosition();\r\n        muteToggle.node.on(Toggle.EventType.TOGGLE,function(){\r\n            soundNormal.active = !muteToggle.isChecked;\r\n            Mgr.soundMgr.setMute(muteToggle.isChecked);\r\n            if(muteToggle.isChecked){\r\n                pos.y = 0;\r\n                soundNormal.setPosition(pos);\r\n            }\r\n            else{\r\n                pos.y = 960;\r\n                soundNormal.setPosition(pos);\r\n            }\r\n        });\r\n\r\n        let btnShulte = this.node.getChildByName(\"btnShulte\");\r\n        btnShulte.on(NodeEventType.TOUCH_END,function(){\r\n            self.OnStartGame(GameType.Shulte);\r\n        });\r\n        let btnGridGame = this.node.getChildByName(\"btnGrid\");\r\n        btnGridGame.on(NodeEventType.TOUCH_END,function(){\r\n            self.OnStartGame(GameType.Grid);\r\n            Mgr.soundMgr.play(\"game_start\");\r\n        });\r\n        \r\n        this.SetGameState(GameState.Home);\r\n    }\r\n\r\n    private OnStartGame(type:GameType){\r\n        if(this._gameState == GameState.Playing){\r\n            return;\r\n        }\r\n        this.SetGameState(GameState.Playing);\r\n        EventManager.dispatch(EventEnum.OnGameStart,type);\r\n    }\r\n\r\n    private OnGameExit(){\r\n        this.SetGameState(GameState.Home);\r\n    }\r\n\r\n    private SetGameState(state:GameState){\r\n        if(state == GameState.Home){\r\n            this.node.active = true;\r\n        }\r\n        else if(state == GameState.Playing){\r\n            this.node.active = false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}