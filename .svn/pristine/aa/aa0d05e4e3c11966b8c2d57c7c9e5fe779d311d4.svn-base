System.register(["__unresolved_0", "cc", "__unresolved_1"], function (_export, _context) {
  "use strict";

  var _reporterNs, _cclegacy, SoundManager, Mgr, _crd;

  function _reportPossibleCrUseOfSoundManager(extras) {
    _reporterNs.report("SoundManager", "./SoundManager", _context.meta, extras);
  }

  _export("default", void 0);

  return {
    setters: [function (_unresolved_) {
      _reporterNs = _unresolved_;
    }, function (_cc) {
      _cclegacy = _cc.cclegacy;
    }, function (_unresolved_2) {
      SoundManager = _unresolved_2.default;
    }],
    execute: function () {
      _crd = true;

      _cclegacy._RF.push({}, "99ac55cqdtDb7pHu3bfqDaw", "Mgr", undefined);

      _export("default", Mgr = class Mgr {
        static Init() {
          if (Mgr.isInit) return;
          Mgr.InitCtrl();
          Mgr.soundMgr = new (_crd && SoundManager === void 0 ? (_reportPossibleCrUseOfSoundManager({
            error: Error()
          }), SoundManager) : SoundManager)();
          Mgr.isInit = true;
        }

        static InitCtrl() {
          let ctrl = new GameShulteController();
          let ctrl2 = new GameGridController();
        }

      });

      Mgr.soundMgr = void 0;
      Mgr.isInit = false;

      _cclegacy._RF.pop();

      _crd = false;
    }
  };
});
//# sourceMappingURL=3c53eb0d7cfb6c64ce5beab211e6945a273a10d1.js.map