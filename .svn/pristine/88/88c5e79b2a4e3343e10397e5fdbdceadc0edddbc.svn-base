{"version":3,"sources":["file:///G:/Work/cocoscreator/MiniGame/assets/script/game/gameShulte/view/GameShulteStartView.ts"],"names":["_decorator","Button","Component","instantiate","Label","resources","UITransform","GameShulteBeginView","Mgr","ShulteGridItem","ccclass","property","GameShulteStartView","_beginNode","_gameStartNode","_gameContainer","_gameContainerSize","_itemNodes","_beginView","_resultNode","_txtTime","_txtResultTime","_indexList","_curType","_num","_time","_deltaTime","_isOver","_curClickIdx","_clickRight","start","getComponent","node","getChildByName","getChildByPath","contentSize","self","btnExit","on","EventType","CLICK","gameExit","btnAgain","playAgain","update","dt","showTime","Math","floor","string","active","updatePosition","clearItemGrid","gameOver","onItemClick","clickIdx","stopLast","soundMgr","play","updateGrid","curType","width","curSize","push","i","itemNode","getItemGrid","addChild","tr","height","setIndex","targetOff","showList","randomIdx","length","random","showIdx","splice","ITEM_POOL","pop","prefabAsset","get","console","log","Node","startGame","type","url","load"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, instantiate, Label, math, Node, Prefab, resources, UITransform } from 'cc';\r\nimport { GameShulteBeginView } from './GameShulteBeginView';\r\nimport Mgr from '../../../manager/Mgr';\r\nimport { ShulteGridItem } from './ShulteGridItem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameShulteStartView')\r\nexport class GameShulteStartView extends Component {\r\n    \r\n    private static ITEM_POOL:Node[] = [];\r\n    private _beginNode:Node;\r\n    private _gameStartNode:Node;\r\n    private _gameContainer:Node;\r\n    private _gameContainerSize:math.Size;\r\n    private _itemNodes:Node[] = [];\r\n\r\n    private _beginView:GameShulteBeginView;\r\n    // private _ap:AudioPlayer;\r\n    private _resultNode:Node;\r\n    private _txtTime:Label;\r\n    private _txtResultTime:Label;\r\n    // private _errorAnim:engine.Animation;\r\n    \r\n    private _indexList:number[] = [];\r\n    private _curType:number;\r\n    private _num:number;\r\n    private _time:number = 0;\r\n    private _deltaTime:number = 0;\r\n    private _isOver:boolean = true;\r\n    private _curClickIdx:number = 0;\r\n    public start(){\r\n        this._beginView = this.getComponent(GameShulteBeginView);\r\n        \r\n        this._beginNode = this.node.getChildByName(\"begin\");\r\n        this._gameStartNode = this.node.getChildByName(\"gameStart\");\r\n        this._gameContainer = this._gameStartNode.getChildByPath(\"group/gridGroup\");\r\n        this._gameContainerSize = this._gameContainer.getComponent(UITransform).contentSize;\r\n        // this._ap = Main.FindChild(this.Node,\"Sound\",AudioPlayer);\r\n        this._resultNode = this._gameStartNode.getChildByName(\"result\");\r\n        this._txtTime = this._gameStartNode.getChildByName(\"txtTime\").getComponent(Label);\r\n        this._txtResultTime = this._resultNode.getChildByName(\"txtResultTime\").getComponent(Label);\r\n\r\n        // this._errorAnim = GameUI.FindChild(this.Node,\"GameStart/imgError\",engine.Animation);\r\n\r\n        let self = this;\r\n        let btnExit:Node = this._gameStartNode.getChildByName(\"btnExit\");\r\n        btnExit.on(Button.EventType.CLICK,function(){\r\n            //退出游戏\r\n            self.gameExit();\r\n        });\r\n        let btnAgain:Node = this._resultNode.getChildByName(\"btnAgain\");\r\n        btnAgain.on(Button.EventType.CLICK,function(){\r\n            //再来一次\r\n            self.playAgain();\r\n        });\r\n\r\n    }\r\n    public update(dt:number) {\r\n        if (this._isOver) return;\r\n        this._deltaTime += dt;//Time.deltaTime;\r\n        if (this._deltaTime >= 0.1){\r\n            this._time += this._deltaTime;\r\n            let showTime = Math.floor(this._time * 1000) / 1000;\r\n            this._txtTime.string = showTime + \"S\";\r\n            this._deltaTime = 0;\r\n        }\r\n    }\r\n\r\n    private playAgain(){\r\n        this._resultNode.active = false;\r\n        this._isOver = false;\r\n        this.updatePosition();\r\n    }\r\n\r\n    private gameExit(){\r\n        this._curClickIdx = 0;\r\n        this._isOver = true;\r\n        this._indexList = [];\r\n        this.clearItemGrid();\r\n        this._txtTime.string = \"\";\r\n        this._deltaTime = 0;\r\n        this._time = 0;\r\n        this._resultNode.active = false;\r\n        this._gameStartNode.active = false;\r\n        this._beginNode.active = true;\r\n        this._beginView.gameExit();\r\n    }\r\n\r\n    private gameOver(){\r\n        this._curClickIdx = 0;\r\n        this._isOver = true;\r\n        this._resultNode.active = true;\r\n        this._time = Math.floor(this._time * 1000) / 1000;\r\n        this._txtResultTime.string = \"您的成绩是：\" + this._time + \"秒\";\r\n        this._txtTime.string = \"\";\r\n        this._deltaTime = 0;\r\n        this._time = 0;\r\n    }\r\n\r\n    private _clickRight:boolean;\r\n    private onItemClick(clickIdx:number){\r\n        if(this._curClickIdx != clickIdx){\r\n            // this._errorAnim.play(\"ClickError\",0,engine.Animation.WrapMode.Once);//Play(\"ClickError\", -1, 0);\r\n            // this._curClickIdx = 0;//点错一次是否重置点击\r\n            let stopLast:boolean = true;\r\n            if(this._clickRight){\r\n                //上次点击如果是正确的，音效不要中断播放\r\n                stopLast = false;\r\n            }\r\n            Mgr.soundMgr.play(\"error1\", stopLast);\r\n            this._clickRight = false;\r\n        }\r\n        else{\r\n            //right\r\n            this._curClickIdx ++;\r\n            this._itemNodes[clickIdx].active = false;\r\n            if(this._curClickIdx >= this._num){\r\n                this.gameOver();\r\n                Mgr.soundMgr.play(\"win\");\r\n            }else{\r\n                let stopLast:boolean = true;\r\n                if (!this._clickRight)\r\n                {\r\n                    //上次点击如果是错误的，音效不要中断播放\r\n                    stopLast = false;\r\n                }\r\n                Mgr.soundMgr.play(\"button1\", stopLast);\r\n            }\r\n            this._clickRight = true;\r\n        }\r\n    }\r\n\r\n    private updateGrid(){\r\n        this._isOver = false;\r\n        let curType = this._curType;\r\n        // let offset = this._systemInfo.screenWidth / 1080;\r\n        let width = this._gameContainerSize.width;\r\n        let curSize = Math.floor(width / curType);// * offset;\r\n        \r\n        let self = this;\r\n        for (let i = 0; i < this._num; i++) {\r\n            this._indexList.push(i);\r\n            let itemNode:Node = this.getItemGrid();\r\n            itemNode.active = true;\r\n            this._gameContainer.addChild(itemNode);\r\n            let tr = itemNode.getComponent(UITransform);\r\n            tr.width = curSize;\r\n            tr.height = curSize;\r\n\r\n            itemNode.getComponent(ShulteGridItem).setIndex(i);\r\n            this._itemNodes.push(itemNode);\r\n\r\n            // let btnCom:engine.UIButton = itemNode.getComponent(engine.UIButton);\r\n            itemNode.targetOff(Button.EventType.CLICK);\r\n            itemNode.on(Button.EventType.CLICK,function(){\r\n                self.onItemClick(i);\r\n            });\r\n        }\r\n        this.updatePosition();\r\n    }\r\n\r\n    private updatePosition(){\r\n        // let curType = this._curType;\r\n        // let width = this._gameContainerSize.width;\r\n        // let curSize = Math.floor(width / curType);\r\n        let showList:number[] = [];\r\n        for (let i = 0; i < this._num; i++) {\r\n            let itemNode:Node = this._itemNodes[i];\r\n            if(!itemNode.active){\r\n                itemNode.active = true;\r\n            }\r\n            let randomIdx:number = Math.floor(this._indexList.length * Math.random());\r\n            let showIdx:number = this._indexList.splice(randomIdx,1)[0];\r\n            showList.push(showIdx);\r\n\r\n            // let col = showIdx % curType;\r\n            // let row = Math.floor(showIdx / curType);\r\n            // let x = col * curSize;\r\n            // let y = row * - curSize;\r\n            // itemNode.transform2D.position.x = x;\r\n            // itemNode.transform2D.position.y = y;\r\n        }\r\n        this._indexList = showList;\r\n    }\r\n\r\n    private getItemGrid():Node{\r\n        let node:Node = GameShulteStartView.ITEM_POOL.pop();\r\n        if(!node){\r\n            let prefabAsset:Prefab = resources.get(\"prefab/ShulteGridItem\");\r\n            if(prefabAsset){\r\n                node = instantiate(prefabAsset);\r\n            }\r\n            else{\r\n                console.log(\"找不到资源\");\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n\r\n    private clearItemGrid(){\r\n        for (let i = 0; i < this._itemNodes.length; i++) {\r\n            let Node = this._itemNodes[i];\r\n            Node.active = false;\r\n            GameShulteStartView.ITEM_POOL.push(Node);\r\n        }\r\n        this._itemNodes = [];\r\n    }\r\n\r\n    public startGame(type:number){\r\n        this._curType = type;\r\n        this._num = type * type;\r\n\r\n        let url:string = 'prefab/ShulteGridItem';\r\n        if(resources.get(url)){\r\n            this.updateGrid();\r\n        }else{\r\n            let self = this;\r\n            resources.load(url,function(){\r\n                console.log(\"#######加载成功\");\r\n                self.updateGrid();\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}