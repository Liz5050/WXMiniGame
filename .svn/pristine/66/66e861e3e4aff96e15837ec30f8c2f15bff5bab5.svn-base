{"version":3,"sources":["file:///G:/Work/cocoscreator/MiniGame/assets/script/game/gameGrid/GameGridController.ts"],"names":["GameGridController","EventEnum","GameType","EventManager","engine","GameUI","GameGridStart","constructor","_gameGridEntity","init","addListener","OnGameStart","onGameStart","type","Grid","url","loader","getAsset","start","self","load","promise","then","prefabAsset","FindChild","game","activeScene2D","root","com","getComponent","active"],"mappings":";;;gGAQqBA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AARZC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Y,iBAAAA,Y;;AACFC,MAAAA,M;;AACAC,MAAAA,M;;AACAC,MAAAA,a;;;;;;;yBAGcN,kB,GAAN,MAAMA,kBAAN,CAAyB;AAE7BO,QAAAA,WAAW,GAAE;AAAA,eADZC,eACY;AAChB,eAAKC,IAAL;AACH;;AAEOA,QAAAA,IAAI,GAAE;AACV;AAAA;AAAA,4CAAaC,WAAb,CAAyB;AAAA;AAAA,sCAAUC,WAAnC,EAA+C,KAAKC,WAApD,EAAgE,IAAhE;AACH;;AAEOA,QAAAA,WAAW,CAACC,IAAD,EAAqB;AACpC,cAAGA,IAAI,IAAI;AAAA;AAAA,oCAASC,IAApB,EAA0B;AAE1B,cAAIC,GAAU,GAAG,0CAAjB;;AACA,cAAG;AAAA;AAAA,gCAAOC,MAAP,CAAcC,QAAd,CAAuBF,GAAvB,CAAH,EAA+B;AAC3B,iBAAKG,KAAL;AACH,WAFD,MAEK;AACD,gBAAIC,IAAI,GAAG,IAAX;AACA;AAAA;AAAA,kCAAOH,MAAP,CAAcI,IAAd,CAAmBL,GAAnB,EAAwBM,OAAxB,CAAgCC,IAAhC,CAAsCC,WAAD,IAA+B;AAChEJ,cAAAA,IAAI,CAACD,KAAL;AACH,aAFD;AAGH;AACJ;;AAEOA,QAAAA,KAAK,GAAE;AACX,cAAG,CAAC,KAAKV,eAAT,EAAyB;AACrB,iBAAKA,eAAL,GAAuB;AAAA;AAAA,kCAAOgB,SAAP,CAAiB;AAAA;AAAA,kCAAOC,IAAP,CAAYC,aAAZ,CAA0BC,IAA3C,EAAgD,yCAAhD,CAAvB;AACH,WAFD,MAGI;AACA,gBAAIC,GAAiB,GAAG,KAAKpB,eAAL,CAAqBqB,YAArB;AAAA;AAAA,+CAAxB;;AACAD,YAAAA,GAAG,CAACjB,WAAJ;AACH;;AACD,eAAKH,eAAL,CAAqBsB,MAArB,GAA8B,IAA9B;AACH;;AAjCmC,O","sourcesContent":["import { EventEnum } from \"../../Enum/EventEnum\";\r\nimport { GameType } from \"../../Enum/GameType\";\r\nimport { EventManager } from \"../../manager/EventManager\";\r\nimport engine from \"engine\";\r\nimport GameUI from \"../../Utils/GameUI\";\r\nimport GameGridStart from \"./View/GameGridStart\";\r\n\r\n\r\nexport default class GameGridController {\r\n    private _gameGridEntity:engine.Entity;\r\n    public constructor(){\r\n        this.init();\r\n    }\r\n\r\n    private init(){\r\n        EventManager.addListener(EventEnum.OnGameStart,this.onGameStart,this);\r\n    }\r\n\r\n    private onGameStart(type:GameType):void {\r\n        if(type != GameType.Grid) return;\r\n        \r\n        let url:string = \"Resources/Prefabs/GameGridMapItem.prefab\";\r\n        if(engine.loader.getAsset(url)){\r\n            this.start();\r\n        }else{\r\n            let self = this;\r\n            engine.loader.load(url).promise.then((prefabAsset:engine.Prefab) => {\r\n                self.start();\r\n            })\r\n        }\r\n    }\r\n\r\n    private start(){\r\n        if(!this._gameGridEntity){\r\n            this._gameGridEntity = GameUI.FindChild(engine.game.activeScene2D.root,\"Main/GameManager/GameContainer/GameGrid\");\r\n        }\r\n        else{\r\n            let com:GameGridStart = this._gameGridEntity.getComponent(GameGridStart);\r\n            com.OnGameStart();\r\n        }\r\n        this._gameGridEntity.active = true;\r\n    }\r\n}"]}