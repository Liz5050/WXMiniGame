{"version":3,"sources":["file:///G:/Work/cocoscreator/MiniGame/assets/script/game/gameShulte/view/GameShulteBeginView.ts"],"names":["BtnType","_decorator","Button","Component","instantiate","Label","resources","UITransform","GameShulteStartView","EventManager","EventEnum","GameType","ShulteGridItem","ccclass","property","GameShulteBeginView","_itemContainer","_beginNode","_gameStartNode","_gameStart","_curTypeIdx","_num","_btns","_items","_typeList","_isStart","update","deltaTime","start","getComponent","self","node","getChildByName","active","getChildByPath","type","i","btn","btnNode","init","on","EventType","CLICK","setIndex","push","length","btnStart","OnStartClick","btnExit","dispatch","OnGameExit","Shulte","startGame","gameExit","index","clearShowGrid","setSelected","curType","url","get","updateShowGrid","load","error","asset","console","log","width","contentSize","curSize","Math","floor","canShowGrid","itemNode","getShowItemGrid","transform","height","addChild","col","row","x","y","setPosition","ITEM_POOL","pop","prefabAsset","item","Array","_isSelected","_index","_type","_itemNode","_normalNode","_selectedNode","consturctor","initUI","txtType","string","isSelected"],"mappings":"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","sourcesContent":["import { _decorator, Asset, Button, Component, instantiate, Label, Node, Prefab, resources, UITransform } from 'cc';\r\nimport { GameShulteStartView } from './GameShulteStartView';\r\nimport { EventManager } from '../../../manager/EventManager';\r\nimport { EventEnum } from '../../../enum/EventEnum';\r\nimport { GameType } from '../../../enum/GameType';\r\nimport { ShulteGridItem } from './ShulteGridItem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameShulteBeginView')\r\nexport class GameShulteBeginView extends Component {\r\n\tprivate static ITEM_POOL:Array<Node> = new Array();\r\n    private _itemContainer:Node;\r\n\r\n    private _beginNode:Node;\r\n    private _gameStartNode:Node;\r\n\r\n    // private _beginAnim:engine.Animator;\r\n    private _gameStart:GameShulteStartView;\r\n\r\n    private _curTypeIdx:number = -1;\r\n    private _num:number;\r\n    private _btns:BtnType[] = [];\r\n    private _items:Node[] = [];\r\n    private _typeList:number[] = [3,4,5,6,7,8];\r\n\r\n    private _isStart:boolean = false;\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    public start() {\r\n\t\tthis._gameStart = this.getComponent(GameShulteStartView);\r\n\r\n\t\tlet self = this;\r\n    //   let muteToggle:engine.UIToggle = GameUI.FindChild(this.entity,\"MuteToggle\",engine.UIToggle);\r\n    //   let soundNormal:engine.Entity = GameUI.FindChild(muteToggle.entity,\"Normal\");//this.entity.transform2D.findChildByName(\"MuteToggle/Normal\").entity;\r\n    //   muteToggle.onClick.add(function(comp,event){\r\n    //       soundNormal.active = !muteToggle.isChecked;\r\n    //       Mgr.soundMgr.setMute(muteToggle.isChecked);\r\n    //   });\r\n      \r\n\r\n\t\tthis._gameStartNode = this.node.getChildByName(\"gameStart\");\r\n\t\tthis._gameStartNode.active = false;\r\n\r\n\t\tthis._beginNode = this.node.getChildByName(\"begin\");\r\n\t\tthis._beginNode.active = true;\r\n      \r\n\t\tthis._itemContainer = this._beginNode.getChildByPath(\"group/gridGroup\");\r\n\t\tfor (let i = 0; i < this._typeList.length; i++) {\r\n\t\t\tlet type = this._typeList[i];\r\n\t\t\tlet btn:BtnType = new BtnType();\r\n\t\t\tlet btnNode:Node = this._beginNode.getChildByPath(\"ToggleGroup/btn\" + (i+1));\r\n\t\t\tbtn.init(btnNode,type,i);\r\n\t\t\tbtnNode.on(Button.EventType.CLICK,function(){\r\n\t\t\t\tself.setIndex(i);\r\n\t\t\t});\r\n\t\t\tthis._btns.push(btn);\r\n\t\t}\r\n      \r\n      \tlet btnStart:Node = this._beginNode.getChildByPath(\"group/btnStart\");\r\n\t  \tbtnStart.on(Button.EventType.CLICK,function(){\r\n\t\t\tself.OnStartClick();\r\n\t\t});\r\n\r\n\t\tlet btnExit:Node = this._beginNode.getChildByName(\"btnExit\");\r\n\t\tbtnExit.on(Button.EventType.CLICK,function(){\r\n            //退出前回到初始化状态\r\n\t\t\tself.setIndex(0);\r\n\t\t\tself.node.active = false;\r\n\t\t\tEventManager.dispatch(EventEnum.OnGameExit,GameType.Shulte);\r\n\t\t});\r\n\t\tthis.setIndex(0);\r\n  }\r\n\r\n  private OnStartClick(){\r\n      if(this._isStart) return;\r\n      this._gameStartNode.active = true;\r\n      this._beginNode.active = false;\r\n      this._gameStart.startGame(this._typeList[this._curTypeIdx]);\r\n      this._isStart = true;\r\n  }\r\n\r\n  public gameExit(){\r\n      this._isStart = false;\r\n  }\r\n\r\n  private setIndex(index:number){\r\n      if(this._curTypeIdx == index) return;\r\n      if(this._curTypeIdx >= 0){\r\n          this.clearShowGrid();\r\n          this._btns[this._curTypeIdx].setSelected(false);\r\n      }\r\n      this._curTypeIdx = index;\r\n      this._btns[index].setSelected(true);\r\n      let curType:number = this._typeList[index];\r\n      this._num = curType * curType;\r\n\r\n      let url:string = \"prefab/ShulteGridItemShow\";\r\n      if(resources.get(url)){\r\n          this.updateShowGrid();\r\n      }else{\r\n          let self = this;\r\n          resources.load(url,function(error,asset:Asset){\r\n              // 将 prefab 资源实例化\r\n              console.log(\"#######加载成功\");\r\n              self.updateShowGrid();\r\n          })\r\n      }\r\n  }\r\n\r\n  private updateShowGrid(){\r\n      let curType = this._typeList[this._curTypeIdx];\r\n      let width = this._itemContainer.getComponent(UITransform).contentSize.width;\r\n      // let offset = this._systemInfo.screenWidth / 1080;\r\n      let curSize = Math.floor(width / curType);// * offset;\r\n      \r\n      for (let i = 0; i < this._num; i++) {\r\n          if(!this.canShowGrid(i)) continue;\r\n          let itemNode:Node = this.getShowItemGrid();\r\n\t\t  let transform = itemNode.getComponent(UITransform);\r\n          transform.width = curSize;\r\n          transform.height = curSize;\r\n          this._itemContainer.addChild(itemNode);\r\n          itemNode.active = true;\r\n\t\t  //手动设置位置，中间需要空出一个方格，不能用自动排序\r\n          let col = i % curType;\r\n          let row = Math.floor(i / curType);\r\n          let x = col * curSize;\r\n          let y = row * - curSize;\r\n          itemNode.setPosition(x,y);\r\n\r\n          itemNode.getComponent(ShulteGridItem).setIndex(i);\r\n          this._items.push(itemNode);\r\n      }\r\n  }\r\n\r\n  private getShowItemGrid():Node{\r\n      let node:Node = GameShulteBeginView.ITEM_POOL.pop();\r\n      if(!node){\r\n          let prefabAsset:Prefab = resources.get(\"prefab/ShulteGridItemShow\");\r\n          if(prefabAsset){\r\n\t\t\tnode = instantiate(prefabAsset);\r\n          }\r\n          else{\r\n              console.log(\"找不到资源\");\r\n          }\r\n      }\r\n      return node;\r\n  }\r\n\r\n  private clearShowGrid(){\r\n      for (let i = 0; i < this._items.length; i++) {\r\n          let item = this._items[i];\r\n          item.active = false;\r\n          GameShulteBeginView.ITEM_POOL.push(item);\r\n      }\r\n      this._items = [];\r\n  }\r\n\r\n  private canShowGrid(index:number) {\r\n      let curType:number = this._typeList[this._curTypeIdx];\r\n      if (curType == 3)\r\n      {\r\n          return index != 4;\r\n      }\r\n      if (curType == 4)\r\n      {\r\n          return index != 5 && index != 6 && index != 9 && index != 10;\r\n      }\r\n      if (curType == 5)\r\n      {\r\n          return (index < 6 || index > 8) && (index < 11 || index > 13) && (index < 16 || index > 18);\r\n      }\r\n      if (curType == 6)\r\n      {\r\n          return index != 14 && index != 15 && index != 20 && index != 21;\r\n      }\r\n      if (curType == 7)\r\n      {\r\n          return (index < 16 || index > 18) && (index < 23 || index > 25) && (index < 30 || index > 32);\r\n      }\r\n      return (index < 18 || index > 21) && (index < 26 || index > 29) && (index < 34 || index > 37) && (index < 42 || index > 45);\r\n  }\r\n}\r\n\r\nclass BtnType {\r\n  private _isSelected:boolean;\r\n  private _index:number;\r\n  private _type:number;\r\n  private _itemNode:Node;\r\n  private _normalNode:Node;\r\n  private _selectedNode:Node;\r\n\r\n  public consturctor(){\r\n\r\n  }\r\n\r\n  public init(node:Node,type:number,index:number){\r\n      this._itemNode = node;\r\n      this._type = type;\r\n      this._index = index;\r\n      this.initUI();\r\n  }\r\n\r\n  private initUI(){\r\n      this._normalNode = this._itemNode.getChildByName(\"normal\");\r\n      this._selectedNode = this._itemNode.getChildByName(\"selected\");\r\n      let txtType:Label = this._itemNode.getChildByName(\"txtType\").getComponent(Label);\r\n      txtType.string = this._type + \"X\" + this._type;\r\n  }\r\n\r\n  public setSelected(isSelected:boolean){\r\n      if (this._isSelected == isSelected){\r\n          return;\r\n      }\r\n      this._normalNode.active = !isSelected;\r\n      this._selectedNode.active = isSelected;\r\n      this._isSelected = isSelected;\r\n  }\r\n}\r\n\r\n\r\n"]}