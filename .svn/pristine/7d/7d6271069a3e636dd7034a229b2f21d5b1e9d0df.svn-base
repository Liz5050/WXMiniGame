System.register(["__unresolved_0", "cc", "__unresolved_1"], function (_export, _context) {
  "use strict";

  var _reporterNs, _cclegacy, __checkObsolete__, __checkObsoleteInNamespace__, utils, AudioPlayer, SoundManager, _crd;

  function _reportPossibleCrUseOfAudioPlayer(extras) {
    _reporterNs.report("AudioPlayer", "../common/AudioPlayer", _context.meta, extras);
  }

  _export("default", void 0);

  return {
    setters: [function (_unresolved_) {
      _reporterNs = _unresolved_;
    }, function (_cc) {
      _cclegacy = _cc.cclegacy;
      __checkObsolete__ = _cc.__checkObsolete__;
      __checkObsoleteInNamespace__ = _cc.__checkObsoleteInNamespace__;
      utils = _cc.utils;
    }, function (_unresolved_2) {
      AudioPlayer = _unresolved_2.AudioPlayer;
    }],
    execute: function () {
      _crd = true;

      _cclegacy._RF.push({}, "9b5c7cxlqBLULBFwM8IfXs3", "SoundManager", undefined);

      __checkObsolete__(['utils']);

      _export("default", SoundManager = class SoundManager {
        constructor() {
          this._ap = void 0;
          this._isInit = void 0;
        }

        init() {
          var soundEntity = utils.find("Canvas/Main/SoundManager");

          if (soundEntity) {
            this._ap = soundEntity.getComponent(_crd && AudioPlayer === void 0 ? (_reportPossibleCrUseOfAudioPlayer({
              error: Error()
            }), AudioPlayer) : AudioPlayer);
          } else {
            console.log("sound不存在");
          }

          this._isInit = true;
        }

        get isInit() {
          return this._isInit;
        }

        setMute(isMute) {
          this._ap.setMute(isMute);
        }

        play(audioName, stopLast) {
          if (stopLast === void 0) {
            stopLast = true;
          }

          this._ap.play(audioName, stopLast);
        }

      });

      _cclegacy._RF.pop();

      _crd = false;
    }
  };
});
//# sourceMappingURL=aa0f0ead19962319c1e7b0a2f4a6ba308f8198cb.js.map