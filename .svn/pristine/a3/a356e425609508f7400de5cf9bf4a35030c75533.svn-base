{"version":3,"sources":["file:///G:/Work/cocoscreator/svn/MiniGame/assets/script/game/gameGrid/GameGridController.ts"],"names":["GameGridController","resources","utils","GameType","EventEnum","EventManager","GameGridStartView","constructor","_gameGridNode","init","addListener","OnGameStart","onGameStart","type","Grid","url","get","start","self","load","find","com","getComponent","active"],"mappings":";;;uJAMqBA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHZC,MAAAA,S,OAAAA,S;AAAkBC,MAAAA,K,OAAAA,K;;AAHlBC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,Y,iBAAAA,Y;;AAEAC,MAAAA,iB,iBAAAA,iB;;;;;;;;;yBAEYN,kB,GAAN,MAAMA,kBAAN,CAAyB;AAE7BO,QAAAA,WAAW,GAAE;AAAA,eADZC,aACY;AAChB,eAAKC,IAAL;AACH;;AAEOA,QAAAA,IAAI,GAAE;AACV;AAAA;AAAA,4CAAaC,WAAb,CAAyB;AAAA;AAAA,sCAAUC,WAAnC,EAA+C,KAAKC,WAApD,EAAgE,IAAhE;AACH;;AAEOA,QAAAA,WAAW,CAACC,IAAD,EAAqB;AACpC,cAAGA,IAAI,IAAI;AAAA;AAAA,oCAASC,IAApB,EAA0B;AAE1B,cAAIC,GAAU,GAAG,wBAAjB;;AACA,cAAGd,SAAS,CAACe,GAAV,CAAcD,GAAd,CAAH,EAAsB;AAClB,iBAAKE,KAAL;AACH,WAFD,MAEK;AACD,gBAAIC,IAAI,GAAG,IAAX;AACAjB,YAAAA,SAAS,CAACkB,IAAV,CAAeJ,GAAf,EAAmB,YAAU;AACzBG,cAAAA,IAAI,CAACD,KAAL;AACH,aAFD;AAGH;AACJ;;AAEOA,QAAAA,KAAK,GAAE;AACX,cAAG,CAAC,KAAKT,aAAT,EAAuB;AACnB,iBAAKA,aAAL,GAAqBN,KAAK,CAACkB,IAAN,CAAW,2BAAX,CAArB;AACH,WAFD,MAGI;AACA,gBAAIC,GAAqB,GAAG,KAAKb,aAAL,CAAmBc,YAAnB;AAAA;AAAA,uDAA5B;;AACAD,YAAAA,GAAG,CAACV,WAAJ;AACH;;AACD,eAAKH,aAAL,CAAmBe,MAAnB,GAA4B,IAA5B;AACH;;AAjCmC,O","sourcesContent":["import { GameType } from \"../../enum/GameType\";\r\nimport { EventEnum } from \"../../enum/EventEnum\";\r\nimport { EventManager } from \"../../manager/EventManager\";\r\nimport { resources , Node, utils} from \"cc\";\r\nimport { GameGridStartView } from \"./view/GameGridStartView\";\r\n\r\nexport default class GameGridController {\r\n    private _gameGridNode:Node;\r\n    public constructor(){\r\n        this.init();\r\n    }\r\n\r\n    private init(){\r\n        EventManager.addListener(EventEnum.OnGameStart,this.onGameStart,this);\r\n    }\r\n\r\n    private onGameStart(type:GameType):void {\r\n        if(type != GameType.Grid) return;\r\n        \r\n        let url:string = \"prefab/GameGridMapItem\";\r\n        if(resources.get(url)){\r\n            this.start();\r\n        }else{\r\n            let self = this;\r\n            resources.load(url,function(){\r\n                self.start();\r\n            });\r\n        }\r\n    }\r\n\r\n    private start(){\r\n        if(!this._gameGridNode){\r\n            this._gameGridNode = utils.find(\"Canvas/Main/Game/GameGrid\");\r\n        }\r\n        else{\r\n            let com:GameGridStartView = this._gameGridNode.getComponent(GameGridStartView);\r\n            com.OnGameStart();\r\n        }\r\n        this._gameGridNode.active = true;\r\n    }\r\n}"]}