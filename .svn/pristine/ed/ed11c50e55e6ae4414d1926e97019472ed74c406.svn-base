{"version":3,"sources":["file:///G:/Work/cocoscreator/svn/MiniGame/assets/script/game/MainMenu.ts"],"names":["_decorator","Button","Component","Toggle","EventManager","EventEnum","GameType","GameState","Mgr","ccclass","property","MainMenu","_gameState","update","deltaTime","start","addListener","OnGameExit","self","muteToggle","node","getChildByName","getComponent","soundNormal","on","EventType","TOGGLE","active","isChecked","soundMgr","setMute","btnShulte","CLICK","OnStartGame","Shulte","btnGridGame","Grid","play","btnNullify","Nullify","btnRank","wx","showToast","title","icon","duration","btnTest","sceneMgr","LoadScene","SetGameState","Home","type","Playing","dispatch","OnGameStart","state"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, director, Node, NodeEventType, Toggle } from 'cc';\r\nimport { EventManager } from '../manager/EventManager';\r\nimport { EventEnum } from '../enum/EventEnum';\r\nimport { GameType } from '../enum/GameType';\r\nimport { GameState } from '../enum/GameState';\r\nimport Mgr from '../manager/Mgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MainMenu')\r\nexport class MainMenu extends Component {\r\n    private _gameState:GameState;\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    public start(){\r\n        EventManager.addListener(EventEnum.OnGameExit,this.OnGameExit,this);\r\n\r\n        let self = this;\r\n        let muteToggle:Toggle = this.node.getChildByName(\"muteToggle\").getComponent(Toggle);\r\n        let soundNormal:Node = muteToggle.node.getChildByName(\"normal\");\r\n        muteToggle.node.on(Toggle.EventType.TOGGLE,function(){\r\n            soundNormal.active = !muteToggle.isChecked;\r\n            Mgr.soundMgr.setMute(muteToggle.isChecked);\r\n        });\r\n\r\n        let btnShulte = this.node.getChildByName(\"btnShulte\");\r\n        btnShulte.on(Button.EventType.CLICK,function(){\r\n            self.OnStartGame(GameType.Shulte);\r\n        });\r\n        let btnGridGame = this.node.getChildByName(\"btnGrid\");\r\n        btnGridGame.on(Button.EventType.CLICK,function(){\r\n            self.OnStartGame(GameType.Grid);\r\n            Mgr.soundMgr.play(\"game_start\");\r\n        });\r\n\r\n        let btnNullify = this.node.getChildByName(\"btnNullify\");\r\n        btnNullify.on(Button.EventType.CLICK,function(){\r\n            self.OnStartGame(GameType.Nullify);\r\n            // wx.showToast({\r\n            //     title: `暂未开放`,\r\n            //     icon: 'none',\r\n            //     duration: 2000\r\n            // });\r\n        });\r\n        let btnRank = this.node.getChildByName(\"btnRank\");\r\n        btnRank.on(Button.EventType.CLICK,function(){\r\n            wx.showToast({\r\n                title: `暂无排名`,\r\n                icon: 'none',\r\n                duration: 2000\r\n            });\r\n        });\r\n\r\n        let btnTest = this.node.getChildByName(\"btnTest\");\r\n        btnTest.on(Button.EventType.CLICK,function(){\r\n            Mgr.sceneMgr.LoadScene(\"sceneTest\");\r\n        });\r\n\r\n        \r\n        this.SetGameState(GameState.Home);\r\n    }\r\n\r\n    private OnStartGame(type:GameType){\r\n        if(this._gameState == GameState.Playing){\r\n            return;\r\n        }\r\n        this.SetGameState(GameState.Playing);\r\n        EventManager.dispatch(EventEnum.OnGameStart,type);\r\n    }\r\n\r\n    private OnGameExit(){\r\n        this.SetGameState(GameState.Home);\r\n    }\r\n\r\n    private SetGameState(state:GameState){\r\n        if(state == GameState.Home){\r\n            this.node.active = true;\r\n        }\r\n        else if(state == GameState.Playing){\r\n            this.node.active = false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}